
server:
  port: 9092
  
spring.application.name: USER-SERVICE 
 
spring.config.import: configserver:http://localhost:8085
#      we can also use->  spring.config.import: optional:configserver:http://localhost:8085  
#above code is impl. github based config. which is connected to config server and we will fetch all 
#config from server to config client and depedency injected in user pom.xml
 
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/microservices
    username: root
    password: Root@123
    driver-class-name: com.mysql.cj.jdbc.Driver
#  profiles:
#    active: dev
    
    
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    hibernate:
      ddl-auto: update
    show-sql: true
 
 
#eureka:
#  instance:
#    prefer-ip-address: true
#  client:
#    register-with-eureka: true
#    fetch-registry: true
#    service-url:
#       defaultZone: http://localhost:8761/eureka
#      above all we get through config server(git )


#actuator configuration
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
          web:
            exposure:
              include: health
              
  endpoint:
    health:
      show-details: always
  
  
#Resilience4j configuration

resilience4j:
  circuitbreaker:
    instances:
       ratingHotelBreaker:
         register-health-indicator: true
         event-consumer-buffer-size: 10
         failure-rate-threshold: 50
         minimum-number-of-calls: 5
         automatic-transition-from-open-to-half-open-enabled: true
         wait-duration-in-open-state: 6s
         permitted-number-of-calls-in-half-open-state: 3
         sliding-window-size: 10
         sliding-window-type: COUNT_BASED
      
  retry:
    instances:
          ratingHotelService:
            max-attempts: 3
            wait-duration: 5s  

  ratelimiter:
    instances:
      userRateLimiter:
        limit-refresh-period: 4s
        limit-for-period: 2
        timeout-duration: 0s
# to test rateLimiter use Jmeter App


